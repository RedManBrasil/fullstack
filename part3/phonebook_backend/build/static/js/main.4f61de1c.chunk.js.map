{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","services_persons","newObject","axios","post","then","response","data","id","put","concat","delete","Alert","props","alert","alertGood","react_default","a","createElement","className","style","color","Filter","value","new","onChange","event","set","target","PersonForm","onSubmit","preventDefault","personObject","name","newNa","number","newNo","date","Date","toISOString","Math","floor","random","undefined","newPe","find","element","setPe","personService","setAlGood","setAl","setNa","setNo","setTimeout","window","confirm","id_user","x","copy","Object","objectSpread","returnedPerson","removeIndex","map","item","indexOf","console","log","type","Persons","query","newFi","persons","filter","el","toLowerCase","person","key","onClick","copy2","deletionIndex","catch","error","splice","deletePerson","rows","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","newAlert","setNewAlert","_useState11","_useState12","setAlertGood","useEffect","get","src_Alert","src_Filter","src_PersonForm","src_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4f61de1c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst delete_person = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, delete_person }\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport axios from 'axios'\nimport './index.css'\n\nconst Alert = (props) => {\n\n  if (props.alert === null) {\n    return null\n  }\n\n  const goodAlertStyle = {\n    color: '#23db79'\n  }\n\n  const badAlertStyle = {\n    color: '#eb4034'\n  }\n\n  if (props.alertGood) {\n    return (\n      <div className=\"error\" style={goodAlertStyle} >\n        {props.alert}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"error\" style={badAlertStyle} >\n        {props.alert}\n      </div>\n    )\n  }\n}\n\nconst Filter = (props) => {\n\n  const handleFilterChange = (event) => {\n    props.set(event.target.value)\n  }\n\n  return (\n    <div>\n      filter shown with: <input value={props.new} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n\n  const handleNameChange = (event) => {\n    props.setNa(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    props.setNo(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: props.newNa,\n      number: props.newNo,\n      date: new Date().toISOString(),\n      id: Math.floor((Math.random() * 1000) + 1),\n    }\n    let found = props.newPe.find(function(element) {\n      return (element.name === props.newNa)\n      })\n\n    if (found === undefined) {\n      props.setPe(props.newPe.concat(personObject))\n      personService.create(personObject)\n      props.setAlGood(true)\n      props.setAl(`Added ${props.newNa}`)\n      props.setNa('')\n      props.setNo('')\n      setTimeout(() => {\n          props.setAl(null)\n        }, 5000)\n    }\n    else {\n      let result2 = window.confirm(`${props.newNa} is already added to the phonebook, replace the older number to a new one?`)\n      if (result2 === true){\n        let id_user = props.newPe.find(x => x.name === props.newNa).id\n        let copy = props.newPe\n        personService.update( id_user ,{ ...personObject, id: id_user})\n        .then(returnedPerson => {\n        let removeIndex = props.newPe.map(function(item) { return item.id; }).indexOf(id_user)\n        console.log(copy)\n        copy[removeIndex].number = props.newNo\n        props.setPe(copy)\n        props.setNa('')\n        props.setNo('')\n        })\n      }\n      else {\n      props.setNa('')\n      props.setNo('')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>name: <input value={props.newNa} onChange={handleNameChange} /></div>\n        <div>number: <input value={props.newNo} onChange={handleNumberChange} /></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = (props) => {\n\n  function filterItems(query) {\n    return props.persons.filter(function(el) {\n        return el.name.toLowerCase().indexOf(query.toLowerCase()) > -1;\n    })\n  }\n\n  const deletePerson = (id) => {\n    let result = window.confirm('Confirm deletion?')\n    if (result === true){\n      let copy2 = props.persons.concat([])\n      let deletionIndex = props.persons.map(function(item) { return item.id }).indexOf(id)\n      personService.delete_person(id).catch(error => {\n        props.setAlGood(false)\n        props.setAl(`Information of ${props.persons[deletionIndex].name} has already been removed from the server`)\n        setTimeout(() => {\n            props.setAl(null)\n          }, 5000)\n      })\n      copy2.splice(deletionIndex, 1)\n      props.setPe(copy2)\n    }\n  }\n\n  const rows = () => filterItems(props.newFi).map(person =>\n    <div key={person.id}>\n      {person.name} {person.number} <button onClick={ () => deletePerson(person.id) } >delete</button>\n    </div>\n  )\n\n  return (\n    <div>\n      <br/>\n      {rows()}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '99632-1057', date: \"2019-07-01T00:00:00.334Z\", id: 1 }\n  ])\n  const [ newName, setNewName ] = useState('write name here...')\n  const [ newNumber, setNewNumber ] = useState('write number here...')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newAlert, setNewAlert ] = useState(null)\n  const [ alertGood, setAlertGood ] = useState(false)\n\n  useEffect(() => {\n  axios\n    .get('https://stormy-bastion-72047.herokuapp.com/api/persons')\n    .then(response => {\n      console.log('promise fulfilled')\n      setPersons(response.data)\n      console.log(response.data)\n    })\n}, [])\n\n  useEffect(() => {\n  console.log(\"State of Persons has changed\")\n  }, [persons])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Alert alert={newAlert} alertGood={alertGood} />\n      <Filter set={setNewFilter} new={newFilter} />\n      <h3>add a new</h3>\n      <PersonForm setNo={setNewNumber} newNo={newNumber} setNa={setNewName} newNa={newName} newPe={persons} setPe={setPersons} setAl={setNewAlert} setAlGood={setAlertGood}/>\n      <Persons persons={persons} setPe={setPersons} newFi={newFilter} setAl={setNewAlert} setAlGood={setAlertGood} />\n    </div>\n  )\n}\n\nexport default App\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}